//
//  FSCPUQuickAdvection.h
//  CocoaGame
//
//  The purpose of this object is to do advection quicker than before by
//	chaching intermediate values/calculations.  (The usual trade-off between
//	memory and speed - and system memory is usually quite cheap!)
//
//	QuickAdvection creates the equivalent of a jit.repos matrix, and uses
//	that to advect the fluid.  This matrix is already bounds corrected, and
//	has gone through a predictor-corrector phase.  In theory, making this
//	as efficient as if the predictor-corrector phase was cut out (now 30% of
//	run-time)
//
//	Collisions are handled by Repos where they can be properly handled...
//

#import "FSCPUCore.h"
#import "FXTaskSequence.h"

//This creates the repos matrix.  It will also do predictor-corrector on
//the advection...
//
//	Note that all streams must be float, same size, and 2-planes.
void FSCPUQuickAdvection_GenRepos(FSStreamDesc in_vel,		//Velocities
								  FSStreamDesc out_repos,	//Output repos
								  FSStreamDesc tmp_vel,		//Temp velocity array
								  FSStreamDesc tmp_repos,	//Temporary repos
								  float in_timestep,		//The timestep
								  FXTaskSequence *in_seq,	//N-CPU helper.
								  int32_t *in_atomic);		//Atomic for n-cpu.

//This executes/replays the repos matrix generated by GenRepos
void FSCPUQuickAdvection_Repos(FSStreamDesc in_repos,		//Repos matrix
							   FSStreamDesc *in_streams,	//Input streams
							   FSStreamDesc *out_streams,	//Output streams
							   FSStreamDesc in_coll,		//The collisions!
							   int in_streamCount,			//Number of streams
							   int32_t *in_atomic);			//Atomic for n-cpu
